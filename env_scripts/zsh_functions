# Charger un environnement Python
pyenv() {
    if [[ -z "$1" ]]; then
        echo "Usage: pyenv <chemin_du_virtualenv>"
        return 1
    fi
    
    echo "Activation de l'environnement : $1/bin/activate"
    
    source "$1/bin/activate"
}

# Reconnaissance Réseau Interne
netutils() {

    if [[ "$1" == "--all" ]]; then
        # Afficher toutes les informations
        echo "\033[1;34m--------------------------------------- IP UTILS -----------------------------------------\033[0m"
        echo "\n\n\033[1;32m--------------------------------------- IP ADDRESSES \033[0m\n\n"
        ip -c -br a 
        echo "\n\n\033[1;32m--------------------------------------- IP ROUTE \033[0m\n\n"
        ip -c -br route
        echo "\n\n\033[1;32m--------------------------------------- IFCONFIG \033[0m\n\n"
        ifconfig
        
        echo "\033[1;34m--------------------------------------- PORTS UTILS -----------------------------------------\033[0m"
        echo "\n\n\033[1;32m--------------------------------------- TCP \033[0m\n\n"
        ss -t
        echo "\n\n\033[1;32m--------------------------------------- UDP \033[0m\n\n"
        ss -u
        echo "\n\n\033[1;32m--------------------------------------- RAW \033[0m\n\n"
        ss -w
        echo "\n\n\033[1;32m--------------------------------------- UNIX \033[0m\n\n"
        ss -x

        echo "\033[1;34m--------------------------------------- ARP UTILS -----------------------------------------\033[0m"
        echo "\n\n\033[1;32m--------------------------------------- IP NEIGHBOR \033[0m\n\n"
        ip -c -br neigh  # Voir les voisins ARP
        echo "\n\n\033[1;32m--------------------------------------- ARP TABLE \033[0m\n\n"
        arp -a  # Voir la table ARP
        
        echo "\033[1;34m--------------------------------------- SSH UTILS -----------------------------------------\033[0m"
        echo "\n\n\033[1;32m--------------------------------------- SSH Directory \033[0m\n\n"
        ls ~/.ssh  # Voir les fichiers de configuration SSH
        echo "\n\n\033[1;32m--------------------------------------- Show Config\033[0m\n\n"
        cat ~/.ssh/config  # Voir la clé privée SSH (si accessible)
        echo "\n\n\033[1;32m--------------------------------------- Show Authorized Keys \033[0m\n\n"
        cat ~/.ssh/authorized_keys  # Voir les clés autorisées
        echo "\n\n\033[1;32m--------------------------------------- Show Known Hosts \033[0m\n\n"
        cat ~/.ssh/known_hosts  # Voir les clés autorisées
        return
    fi
    
    # Initialiser les options
    while getopts "ipasS" opt; do
        case ${opt} in
            i)
                # Afficher les informations IP
                echo "\033[1;34m--------------------------------------- IP UTILS -----------------------------------------\033[0m"
                echo "\n\n\033[1;32m--------------------------------------- IP ADDRESSES \033[0m\n\n"
                ip -c -br a
                echo "\n\n\033[1;32m--------------------------------------- IP ROUTE \033[0m\n\n"
                ip -c -br route
                echo "\n\n\033[1;32m--------------------------------------- IFCONFIG \033[0m\n\n"
                ifconfig
                ;;
            p)
                # Afficher les informations sur les ports
                echo "\033[1;34m--------------------------------------- PORTS UTILS -----------------------------------------\033[0m"
                echo "\n\n\033[1;32m--------------------------------------- TCP \033[0m\n\n"
                ss -t
                echo "\n\n\033[1;32m--------------------------------------- UDP \033[0m\n\n"
                ss -u
                echo "\n\n\033[1;32m--------------------------------------- RAW \033[0m\n\n"
                ss -w
                echo "\n\n\033[1;32m--------------------------------------- UNIX \033[0m\n\n"
                ss -x
                ;;
            a)
                # Afficher les informations ARP
                echo "\033[1;34m--------------------------------------- ARP UTILS -----------------------------------------\033[0m"
                echo "\n\n\033[1;32m--------------------------------------- IP NEIGHBOR \033[0m\n\n"
                ip -c -br neigh  # Voir les voisins ARP
                echo "\n\n\033[1;32m--------------------------------------- ARP TABLE \033[0m\n\n"
                arp -a  # Voir la table ARP
                ;;
            s)
                # Afficher les informations SSH
                echo "\033[1;34m--------------------------------------- SSH UTILS -----------------------------------------\033[0m"
                echo "\n\n\033[1;32m--------------------------------------- SSH Directory \033[0m\n\n"
                ls ~/.ssh  # Voir les fichiers de configuration SSH
                echo "\n\n\033[1;32m--------------------------------------- Show Config\033[0m\n\n"
                cat ~/.ssh/config  # Voir la clé privée SSH (si accessible)
                echo "\n\n\033[1;32m--------------------------------------- Show Authorized Keys \033[0m\n\n"
                cat ~/.ssh/authorized_keys  # Voir les clés autorisées
                echo "\n\n\033[1;32m--------------------------------------- Show Known Hosts \033[0m\n\n"
                cat ~/.ssh/known_hosts  # Voir les clés autorisées
                ;;
            *)
                echo "Usage: netutils [--all] [-i] [-p] [-a] [-S] (-a is for ARP CONFIG)"
                return 1
                ;;
        esac
    done
}

hwutils() {
    
    usage() {
       echo "Usage: hwutils [options]"
       echo
       echo "Options:"
       echo "  -m      Affiche les modules du noyau, l'état de la batterie, les capteurs, les périphériques Bluetooth et les périphériques série."
       echo "  -g      Affiche les informations sur la carte graphique (GPU), la carte graphique utilisée et d'autres détails OpenGL."
       echo "  -u      Affiche les informations sur les périphériques USB, y compris une liste détaillée des périphériques USB connectés."
       echo "  -r      Affiche les informations sur la mémoire (RAM), y compris l'utilisation de la RAM et les statistiques de mémoire/CPU."
       echo "  -d      Affiche les informations sur les disques, les partitions, l'espace disque et les systèmes de fichiers montés."
       echo "  -n      Affiche les informations sur les cartes réseau, y compris les détails de la carte réseau et l'utilisation d'eth0."
       echo "  -c      Affiche les informations sur le processeur (CPU), y compris les détails du processeur et son architecture."
       echo "  -h      Affiche ce message d'aide."
       echo
       echo "Exemples d'utilisation:"
       echo "  hwutils -c    # Affiche les informations sur le processeur"
       echo "  hwutils -r    # Affiche les informations sur la mémoire"
       echo "  hwutils -d    # Affiche les informations sur les disques"
       echo "  hwutils -g    # Affiche les informations sur la carte graphique"
       echo "  hwutils -m    # Affiche les modules du noyau et autres périphériques"
       echo "  hwutils -n    # Affiche les informations sur les cartes réseau"
       echo "  hwutils -u    # Affiche les informations sur les périphériques USB"
       echo
       echo "Pour obtenir l'aide complète : hwutils -h"
       echo
}

    # Si l'option -h est passée, afficher l'aide détaillée
    if [[ "$1" == "-h" || "$1" == "--help" ]]; then
        usage
        return
    fi

    if [[ "$1" == "--all" ]]; then
        # Afficher toutes les informations
        echo "\033[1;34m-------------------------------------------------------------------------------- CPU ----------------------------------------------------------------------------------\033[0m"
	lscpu
        echo "\033[1;34m-------------------------------------------------------------------------------- RAM ----------------------------------------------------------------------------------\033[0m"
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ RAM USE \033[0m\n\n"
        free -h  # Voir l'utilisation de la RAM
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ RAM STATS \033[0m\n\n"
	vmstat  # Voir les statistiques mémoire et CPU en direct
        echo "\033[1;34m-------------------------------------------------------------------------------- DISKS ----------------------------------------------------------------------------------\033[0m"
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ LSBLK  \033[0m\n\n"
        lsblk  # Voir les disques et partitions
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ FDISKS \033[0m\n\n"
	sudo fdisk -l  # Voir les disques avec droits admin
	echo "\n\n\033[1;32m------------------------------------------------------------------------------ CFDISKS \033[0m\n\n"
	cfdisk  # Interface pour gérer les partitions
	echo "\n\n\033[1;32m------------------------------------------------------------------------------ SHOW FREE SPACE IN HUMAN READABLE FORMAT\033[0m\n\n"
	df -h  # Voir l'espace disque utilisé et libre
	echo "\n\n\033[1;32m------------------------------------------------------------------------------ SHOW MOUNT\033[0m\n\n"
	mount  # Voir les systèmes de fichiers montés
        echo "\033[1;34m-------------------------------------------------------------------------------- NETWORK CARDS----------------------------------------------------------------------------------\033[0m"
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ NETWORK CARD DETAILS\033[0m\n\n"
        lspci | grep -i ethernet  # Voir les détails de la carte réseau
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ ETHTOOL USAGE \033[0m\n\n"
	ethtool eth0  # Voir les détails d'une interface réseau spécifique
        echo "\033[1;34m-------------------------------------------------------------------------------- USB ----------------------------------------------------------------------------------\033[0m"
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ LIST USB\033[0m\n\n"
        lsusb  # Lister les périphériques USB
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ LIST USB (DETAILLED) \033[0m\n\n"
	usb-devices  # Afficher les périphériques USB avec détails
        echo "\033[1;34m-------------------------------------------------------------------------------- GPU ----------------------------------------------------------------------------------\033[0m"
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ GPU INFOS\033[0m\n\n"
        lspci | grep -i vga  # Informations sur la carte graphique
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ SHOW USED GPU\033[0m\n\n"
	glxinfo | grep "OpenGL renderer"  # Voir la carte graphique utilisée
        echo "\033[1;34m-------------------------------------------------------------------------------- MODULES & PERIPHERALS ----------------------------------------------------------------------------------\033[0m"
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ KERNEL MODULES\033[0m\n\n"
        lsmod  # Voir les modules du noyau
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ BATTERY (LAPTOPS) \033[0m\n\n"
	upower -i /org/freedesktop/UPower/devices/battery_BAT0  # Voir l'état de la batterie
	echo "\n\n\033[1;32m------------------------------------------------------------------------------ CAPTORS\033[0m\n\n"
	sensors  # Voir les températures et ventilateurs
	echo "\n\n\033[1;32m------------------------------------------------------------------------------ BLUETOOTH INFOS\033[0m\n\n"
	hciconfig  # Voir les périphériques Bluetooth
	echo "\n\n\033[1;32m------------------------------------------------------------------------------ SERIAL PERIPHERALS\033[0m\n\n"
	dmesg | grep tty  # Voir les périphériques connectés en série
        return
    fi

    # Initialiser les options
    while getopts "mgurdnc" opt; do
        case ${opt} in
            c)
                # Afficher les informations IP
                echo "\033[1;34m-------------------------------------------------------------------------------- CPU ----------------------------------------------------------------------------------\033[0m"
                lscpu
                ;;
            r)
                echo "\033[1;34m-------------------------------------------------------------------------------- RAM ----------------------------------------------------------------------------------\033[0m"
		echo "\n\n\033[1;32m------------------------------------------------------------------------------ RAM USE \033[0m\n\n"
		free -h  # Voir l'utilisation de la RAM
		echo "\n\n\033[1;32m------------------------------------------------------------------------------ RAM STATS \033[0m\n\n"
		vmstat  # Voir les statistiques mémoire et CPU en direct
                ;;
            d)
                echo "\033[1;34m-------------------------------------------------------------------------------- DISKS ----------------------------------------------------------------------------------\033[0m"
		echo "\n\n\033[1;32m------------------------------------------------------------------------------ LSBLK  \033[0m\n\n"
		lsblk  # Voir les disques et partitions
		echo "\n\n\033[1;32m------------------------------------------------------------------------------ FDISKS \033[0m\n\n"
		sudo fdisk -l  # Voir les disques avec droits admin
		echo "\n\n\033[1;32m------------------------------------------------------------------------------ CFDISKS \033[0m\n\n"
		cfdisk  # Interface pour gérer les partitions
		echo "\n\n\033[1;32m------------------------------------------------------------------------------ SHOW FREE SPACE IN HUMAN READABLE FORMAT\033[0m\n\n"
		df -h  # Voir l'espace disque utilisé et libre
		echo "\n\n\033[1;32m------------------------------------------------------------------------------ SHOW MOUNT\033[0m\n\n"
		mount  # Voir les systèmes de fichiers montés
                ;;
            n)
                echo "\033[1;34m-------------------------------------------------------------------------------- NETWORK CARDS----------------------------------------------------------------------------------\033[0m"
		echo "\n\n\033[1;32m------------------------------------------------------------------------------ NETWORK CARD DETAILS\033[0m\n\n"
		lspci | grep -i ethernet  # Voir les détails de la carte réseau
		echo "\n\n\033[1;32m------------------------------------------------------------------------------ ETHTOOL USAGE \033[0m\n\n"
		ethtool eth0  # Voir les détails d'une interface réseau spécifique
                ;;
            u)
                echo "\033[1;34m-------------------------------------------------------------------------------- USB ----------------------------------------------------------------------------------\033[0m"
		echo "\n\n\033[1;32m------------------------------------------------------------------------------ LIST USB\033[0m\n\n"
		lsusb  # Lister les périphériques USB
		echo "\n\n\033[1;32m------------------------------------------------------------------------------ LIST USB (DETAILLED) \033[0m\n\n"
		usb-devices  # Afficher les périphériques USB avec détails
                ;;
            g)
                echo "\033[1;34m-------------------------------------------------------------------------------- GPU ----------------------------------------------------------------------------------\033[0m"
		echo "\n\n\033[1;32m------------------------------------------------------------------------------ GPU INFOS\033[0m\n\n"
		lspci | grep -i vga  # Informations sur la carte graphique
		echo "\n\n\033[1;32m------------------------------------------------------------------------------ SHOW USED GPU\033[0m\n\n"
		glxinfo | grep "OpenGL renderer"  # Voir la carte graphique utilisée
                ;;
            m)
                echo "\033[1;34m-------------------------------------------------------------------------------- MODULES & PERIPHERALS ----------------------------------------------------------------------------------\033[0m"
		echo "\n\n\033[1;32m------------------------------------------------------------------------------ KERNEL MODULES\033[0m\n\n"
		lsmod  # Voir les modules du noyau
		echo "\n\n\033[1;32m------------------------------------------------------------------------------ BATTERY (LAPTOPS) \033[0m\n\n"
		upower -i /org/freedesktop/UPower/devices/battery_BAT0  # Voir l'état de la batterie
		echo "\n\n\033[1;32m------------------------------------------------------------------------------ CAPTORS\033[0m\n\n"
		sensors  # Voir les températures et ventilateurs
		echo "\n\n\033[1;32m------------------------------------------------------------------------------ BLUETOOTH INFOS\033[0m\n\n"
		hciconfig  # Voir les périphériques Bluetooth
		echo "\n\n\033[1;32m------------------------------------------------------------------------------ SERIAL PERIPHERALS\033[0m\n\n"
		dmesg | grep tty  # Voir les périphériques connectés en série
                ;;
            *)
                usage
                return 1
                ;;
        esac
    done
}

hostutils() {
    
    usage() {
        echo "Usage: hostutils [options]"
        echo
        echo "Options:"
        echo "  -k      Affiche les informations du noyau (uname -a)"
        echo "  -r      Affiche les informations du système (hostnamectl)"
        echo "  -s      Affiche les détails de la distribution (lsb_release -a)"
        echo "  -u      Affiche des informations sur l'utilisateur (whoami, w, id, who)"
        echo "  -p      Affiche les processus en cours (ps aux)"
        echo "  -a      Affiche les applications en cours et les fichiers temporaires (lsof -i, ls /tmp)"
        echo "  -n      Affiche les configurations réseau (cat /etc/resolv.conf, cat /etc/hosts)"
        echo "  -c      Affiche les cronjobs et les services (crontab -l, systemctl list-timers --all)"
        echo "  -f      Affiche les fichiers de configuration utilisateur et cache (ls ~/.config, cat ~/.*rc)"
        echo "  -l      Affiche les logs du système (ls /var/log, dmesg, journalctl -xe)"
        echo "  --all   Affiche toutes les informations disponibles"
        echo
        echo "Exemples:"
        echo "  hostutils -k    # Affiche les informations du noyau"
        echo "  hostutils -u    # Affiche les informations sur l'utilisateur"
        echo "  hostutils --all # Affiche toutes les informations"
        echo
    }

    # Si l'option -h est passée, afficher l'aide détaillée
    if [[ "$1" == "-h" || "$1" == "--help" ]]; then
        usage
        return
    fi
    # Afficher toutes les informations si l'option --all est donnée
    if [[ "$1" == "--all" ]]; then
        echo "\033[1;34m-------------------------------------------------------------------------------- Base Infos ----------------------------------------------------------------------------------\033[0m"
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ KERNEL INFOS\033[0m\n\n"
        uname -a  # Afficher des infos sur le noyau
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ SYS INFOS\033[0m\n\n"
        hostnamectl  # Voir les infos du système
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ DISTRIB DETAILS\033[0m\n\n"
        lsb_release -a  # Voir les détails de la distribution Linux

        echo "\033[1;34m-------------------------------------------------------------------------------- Identity ----------------------------------------------------------------------------------\033[0m"
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ Actual User\033[0m\n\n"
        whoami  # Voir l'utilisateur actuel
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ Connected Users\033[0m\n\n"
        w  # Voir les utilisateurs connectés
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ ID\033[0m\n\n"
        id  # Voir l'UID, GID et groupes de l'utilisateur
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ WHO IS CONNECTED ?\033[0m\n\n"
        who  # Voir qui est connecté au système
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ CONNECTION HISTORY\033[0m\n\n"
        last  # Voir l'historique des connexions

        echo "\033[1;34m-------------------------------------------------------------------------------- Users & Groups ----------------------------------------------------------------------------------\033[0m"
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ GROUPS\033[0m\n\n"
        cat /etc/group  # Voir les groupes existants
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ PASSWD\033[0m\n\n"
        cat /etc/passwd  # Voir les utilisateurs
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ SHADOW\033[0m\n\n"
        cat /etc/shadow  # Voir les mots de passe hachés (nécessite sudo)

        echo "\033[1;34m-------------------------------------------------------------------------------- Processes ----------------------------------------------------------------------------------\033[0m"
        ps aux  # Voir les processus en cours

        echo "\033[1;34m-------------------------------------------------------------------------------- App In Use ----------------------------------------------------------------------------------\033[0m"
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ Currently in Use\033[0m\n\n"
        lsof -i  # Voir les fichiers ouverts liés aux connexions réseau
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ Temp Files\033[0m\n\n"
        ls /tmp  # Voir les fichiers temporaires

        echo "\033[1;34m-------------------------------------------------------------------------------- Net Config ----------------------------------------------------------------------------------\033[0m"
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ DNS Config\033[0m\n\n"
        cat /etc/resolv.conf  # Voir la configuration DNS
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ LOCAL RSOLV\033[0m\n\n"
        cat /etc/hosts  # Voir les résolutions locales des noms de domaine

        echo "\033[1;34m-------------------------------------------------------------------------------- Cronjobs & Services ----------------------------------------------------------------------------------\033[0m"
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ Crontab List\033[0m\n\n"
        crontab -l
        ls /etc/cron.d  # Voir les tâches planifiées du système
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ Services\033[0m\n\n"
        cat /etc/services
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ SYSTEMD TASKS\033[0m\n\n"
        systemctl list-timers --all  # Voir les tâches planifiées via systemd

        echo "\033[1;34m-------------------------------------------------------------------------------- Config ----------------------------------------------------------------------------------\033[0m"
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ User Config\033[0m\n\n"
        ls ~/.config  # Voir les fichiers de configuration utilisateur
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ Searching for .zshrc, .bashrc or Somethine Else...\033[0m\n\n"
        cat ~/.*rc # Voir les configurations des shells
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ Cache\033[0m\n\n"
        ls ~/.cache  # Voir les fichiers en cache
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ Show Profile\033[0m\n\n"
        cat ~/.profile  # Voir le profil utilisateur
        cat ~/.*profile
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ SSH Config\033[0m\n\n"
        cat ~/.ssh/config

        echo "\033[1;34m-------------------------------------------------------------------------------- Logs ----------------------------------------------------------------------------------\033[0m"
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ Show Services Logging\033[0m\n\n"
        ls /var/log  # Voir les logs système (Nginx, Apache, etc.)
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ Kernel Logging\033[0m\n\n"
        dmesg | tail -50  # Voir les derniers logs du noyau
        echo "\n\n\033[1;32m------------------------------------------------------------------------------ System Logging\033[0m\n\n"
        journalctl -xe  # Voir les logs détaillés de systemd
        return
    fi

    # Initialiser les options
    while getopts "krsuapncfl" opt; do
        case ${opt} in
            k)
                echo "\033[1;34m-------------------------------------------------------------------------------- KERNEL INFOS ----------------------------------------------------------------------------------\033[0m"
                uname -a
                ;;
            r)
                echo "\033[1;34m-------------------------------------------------------------------------------- SYS INFOS ----------------------------------------------------------------------------------\033[0m"
                hostnamectl
                ;;
            s)
                echo "\033[1;34m-------------------------------------------------------------------------------- DISTRIB DETAILS ----------------------------------------------------------------------------------\033[0m"
                lsb_release -a
                ;;
            u)
                echo "\033[1;34m-------------------------------------------------------------------------------- Identity ----------------------------------------------------------------------------------\033[0m"
                echo "\n\n\033[1;32m------------------------------------------------------------------------------ Actual User\033[0m\n\n"
                whoami
                echo "\n\n\033[1;32m------------------------------------------------------------------------------ Connected Users\033[0m\n\n"
                w
                echo "\n\n\033[1;32m------------------------------------------------------------------------------ ID\033[0m\n\n"
                id
                echo "\n\n\033[1;32m------------------------------------------------------------------------------ WHO IS CONNECTED ?\033[0m\n\n"
                who
                ;;
            p)
                echo "\033[1;34m-------------------------------------------------------------------------------- Processes ----------------------------------------------------------------------------------\033[0m"
                ps aux
                ;;
            a)
                echo "\033[1;34m-------------------------------------------------------------------------------- App In Use ----------------------------------------------------------------------------------\033[0m"
                echo "\n\n\033[1;32m------------------------------------------------------------------------------ Currently in Use\033[0m\n\n"
                lsof -i
                echo "\n\n\033[1;32m------------------------------------------------------------------------------ Temp Files\033[0m\n\n"
                ls /tmp
                ;;
            n)
                echo "\033[1;34m-------------------------------------------------------------------------------- Net Config ----------------------------------------------------------------------------------\033[0m"
                echo "\n\n\033[1;32m------------------------------------------------------------------------------ DNS Config\033[0m\n\n"
                cat /etc/resolv.conf
                echo "\n\n\033[1;32m------------------------------------------------------------------------------ LOCAL RSOLV\033[0m\n\n"
                cat /etc/hosts
                ;;
            c)
                echo "\033[1;34m-------------------------------------------------------------------------------- Cronjobs & Services ----------------------------------------------------------------------------------\033[0m"
                echo "\n\n\033[1;32m------------------------------------------------------------------------------ Crontab List\033[0m\n\n"
                crontab -l
                ls /etc/cron.d
                echo "\n\n\033[1;32m------------------------------------------------------------------------------ Services\033[0m\n\n"
                cat /etc/services
                echo "\n\n\033[1;32m------------------------------------------------------------------------------ SYSTEMD TASKS\033[0m\n\n"
                systemctl list-timers --all
                ;;
            f)
                echo "\033[1;34m-------------------------------------------------------------------------------- Config ----------------------------------------------------------------------------------\033[0m"
                echo "\n\n\033[1;32m------------------------------------------------------------------------------ User Config\033[0m\n\n"
                ls ~/.config
                echo "\n\n\033[1;32m------------------------------------------------------------------------------ Searching for .zshrc, .bashrc or Somethine Else...\033[0m\n\n"
                cat ~/.*rc
                echo "\n\n\033[1;32m------------------------------------------------------------------------------ Cache\033[0m\n\n"
                ls ~/.cache
                echo "\n\n\033[1;32m------------------------------------------------------------------------------ Show Profile\033[0m\n\n"
                cat ~/.profile
                cat ~/.*profile
                echo "\n\n\033[1;32m------------------------------------------------------------------------------ SSH Config\033[0m\n\n"
                cat ~/.ssh/config
                ;;
            l)
                echo "\033[1;34m-------------------------------------------------------------------------------- Logs ----------------------------------------------------------------------------------\033[0m"
                echo "\n\n\033[1;32m------------------------------------------------------------------------------ Show Services Logging\033[0m\n\n"
                ls /var/log
                echo "\n\n\033[1;32m------------------------------------------------------------------------------ Kernel Logging\033[0m\n\n"
                dmesg | tail -50
                echo "\n\n\033[1;32m------------------------------------------------------------------------------ System Logging\033[0m\n\n"
                journalctl -xe
                ;;
            \?)
                usage
                ;;
        esac
    done
    shift $((OPTIND - 1))
    return
}


# Git utils
gitpush() {
    if [ $# -ne 2 ]; then
        echo "[Usage] gitpush 'Commit Message' 'BranchName'"
        return 1  # Sortir de la fonction avec un code d'erreur si les arguments sont incorrects
    fi

    git add . && git commit -m "$1" && git push -u origin "$2"
}

# Cron Utils
cronadd() {
    if [ $# -ne 1 ]; then
        echo "[Usage] add_cron 'cron_expression'"
        return 1
    fi
    (crontab -l; echo "$1") | crontab -   # Ajoute une tâche cron
}

crondel() {
    if [ $# -ne 1 ]; then
        echo "[Usage] remove_cron 'cron_expression'"
        return 1
    fi
    crontab -l | grep -v "$1" | crontab -  # Supprime une tâche cron
}

# Find a Word
fword() {
    if [ $# -ne 2 ]; then
        echo "[Usage] fword 'word' 'file'"
        return 1
    fi
    grep -n "$1" "$2"  # Recherche "$1" dans le fichier "$2"
}

# Tar Utils
tarf() {
    if [ $# -ne 1 ]; then
        echo "[Usage] tar_folder 'folder_name'"
        return 1
    fi
    tar -czf "$1.tar.gz" "$1"  # Sauvegarde le dossier en tar.gz
}

untarf() {
    if [ $# -ne 1 ]; then
        echo "[Usage] untar_folder 'file.tar.gz'"
        return 1
    fi

    tar -xzf "$1"  # Décompresse le fichier .tar.gz
}

mkcd() {
	if [ $# -ne 1 ]; then
		echo "[Usage] mkcd 'DirectoryName'"
		return 1
	fi
	mkdir $1 && cd $1
}

backup() {
    if [ $# -ne 2 ]; then
        echo "[Usage] backup 'source_directory' 'destination_directory'"
        return 1
    fi
    # Sauvegarde avec compression et création de logs
    rsync -avh --delete --progress "$1" "$2" > "$2/backup_log.txt" 2>&1
    echo "Backup completed. Log saved to $2/backup_log.txt"
}

findfuzzy() {
    find . -type f | fzf
}
